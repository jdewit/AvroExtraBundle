{% macro attributes(attributes) %}
{% for name, value in attributes %}
    {%- if value is not none and value is not sameas(false) %}
        {{- ' %s="%s"'|format(name, value is sameas(true) ? name|e : value|e)|raw }}
    {%- endif %}
{% endfor %}
{% endmacro %}

{% block compressed_root %}
{% spaceless %}
{{ block('root') }}
{% endspaceless %}
{% endblock %}

{% block root %}
{% set listAttributes = item.attributes %}
{{ block('list') }}
{% endblock %}

{% block list %}
{% if item.hasChildren and options.depth is not sameas(0) and item.displayChildren %}
    {%- set listClasses = item.attribute('class') is not empty ? [item.attribute('class')] : [] %}
        {% if item.level == 0 %}
            {% set listClasses = listClasses|merge(['nav']) %}
        {% elseif item.level == 1 %}
            {% set listClasses = listClasses|merge(['dropdown-menu']) %}
        {% endif %}
    {%- set listAttributes = listAttributes|merge({'class': listClasses|join(' ')}) %}

    <ul{{ _self.attributes(listAttributes) }} {% if item.level == 0 %}style="padding-left: 7%;"{% endif %}>
        {{ block('children') }}
    </ul>
{% endif %}
{% endblock %}

{% block children %}
{# save current variables #}
{% set currentOptions = options %}
{% set currentItem = item %}
{# update the depth for children #}
{% if options.depth is not none %}
{% set options = currentOptions|merge({'depth': currentOptions.depth - 1}) %}
{% endif %}
{% for item in currentItem.children %}
    {{ block('item') }}
{% endfor %}
{# restore current variables #}
{% set item = currentItem %}
{% set options = currentOptions %}
{% endblock %}

{% block item %}
{% if item.displayed %}
{# building the class of the item #}
    {%- set classes = item.attribute('class') is not empty ? [item.attribute('class')] : [] %}
    {%- if item.level == 1 %}
        {% set classes = classes|merge(['dropdown']) %}
    {%- endif %}
    {%- if item.current %}
        {%- set classes = classes|merge(['active']) %}
    {#
    {%- elseif item.currentAncestor %}
        {%- set classes = classes|merge([options.ancestorClass]) %}
    #}
    {%- endif %}
    {%- if item.actsLikeFirst %}
        {%- set classes = classes|merge([options.firstClass]) %}
    {%- endif %}
    {%- if item.actsLikeLast %}
        {%- set classes = classes|merge([options.lastClass]) %}
    {%- endif %}
    {%- set attributes = item.attributes %}
    {%- if classes is not empty %}
        {%- set attributes = attributes|merge({'class': classes|join(' ')}) %}
    {%- endif %}
{# displaying the item #}
    <li {{ _self.attributes(attributes) }}>
        {%- if item.uri is not empty and (not item.current or options.currentAsLink) %}
        {{ block('linkElement') }}
        {%- else %}
        {{ block('spanElement') }}
        {%- endif %}
{# render the list of children#}
        {%- set childrenClasses = item.childrenAttribute('class') is not empty ? [item.childrenAttribute('class')] : [] %}
        {%- set childrenClasses = childrenClasses|merge(['menu_level_' ~ item.level]) %}
        {%- set listAttributes = item.childrenAttributes|merge({'class': childrenClasses|join(' ') }) %}
        {{ block('list') }}
    </li>
{% endif %}
{% endblock %}

{% block linkElement %}
{% if item.level == 1 %}
{% if item.hasChildren %}
{%- set linkAttributes = item.linkAttributes|merge({'class': 'dropdown-toggle', 'data-toggle': 'dropdown'}) %}
{%- set uri = '#' %}
{%- set caret = '<b class="caret"></b>' %}
{% else %}
{%- set linkAttributes = item.linkAttributes %}
{%- set uri = item.uri %}
{%- set caret = '' %}
{% endif %}
{% else %}
{%- set linkAttributes = item.linkAttributes %}
{%- set uri = item.uri %}
{%- set caret = '' %}
{% endif %}
<a href="{{ uri }}"{{ _self.attributes(linkAttributes) }}>{% if linkAttributes.icon is defined %}<i class="{{ linkAttributes.icon }}"></i>{% endif %}{{ block('label') }}{{ caret|raw }}</a>{% endblock %}

{% block spanElement %}
{% if item.level == 1 %}
{%- set linkAttributes = item.linkAttributes|merge({'class': 'dropdown-toggle', 'data-toggle': 'dropdown'}) %}
{%- set uri = '#' %}
{% else %}
{%- set linkAttributes = item.linkAttributes %}
{%- set uri = item.uri %}
{% endif %}
<a href="{{ uri }}"{{ _self.attributes(linkAttributes) }}>{{ block('label') }}</a>{% endblock %}

{% block label %}{{ item.label }}{% endblock %}

